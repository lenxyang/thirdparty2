import("//testing/test.gni")

config("glm-config") {
  include_dirs = [
    "src/"
  ]
}

static_library("glm") {
  sources = [
    "src/glm/common.hpp",
    # "src/glm/detail/dummy.cpp",
    "src/glm/detail/func_common.hpp",
    "src/glm/detail/func_common.inl",
    "src/glm/detail/func_exponential.hpp",
    "src/glm/detail/func_exponential.inl",
    "src/glm/detail/func_geometric.hpp",
    "src/glm/detail/func_geometric.inl",
    "src/glm/detail/func_integer.hpp",
    "src/glm/detail/func_integer.inl",
    "src/glm/detail/func_matrix.hpp",
    "src/glm/detail/func_matrix.inl",
    "src/glm/detail/func_noise.hpp",
    "src/glm/detail/func_noise.inl",
    "src/glm/detail/func_packing.hpp",
    "src/glm/detail/func_packing.inl",
    "src/glm/detail/func_trigonometric.hpp",
    "src/glm/detail/func_trigonometric.inl",
    "src/glm/detail/func_vector_relational.hpp",
    "src/glm/detail/func_vector_relational.inl",
    "src/glm/detail/glm.cpp",
    "src/glm/detail/hint.hpp",
    "src/glm/detail/intrinsic_common.hpp",
    "src/glm/detail/intrinsic_common.inl",
    "src/glm/detail/intrinsic_exponential.hpp",
    "src/glm/detail/intrinsic_exponential.inl",
    "src/glm/detail/intrinsic_geometric.hpp",
    "src/glm/detail/intrinsic_geometric.inl",
    "src/glm/detail/intrinsic_integer.hpp",
    "src/glm/detail/intrinsic_integer.inl",
    "src/glm/detail/intrinsic_matrix.hpp",
    "src/glm/detail/intrinsic_matrix.inl",
    "src/glm/detail/intrinsic_trigonometric.hpp",
    "src/glm/detail/intrinsic_trigonometric.inl",
    "src/glm/detail/intrinsic_vector_relational.hpp",
    "src/glm/detail/intrinsic_vector_relational.inl",
    "src/glm/detail/precision.hpp",
    "src/glm/detail/precision.inl",
    "src/glm/detail/setup.hpp",
    "src/glm/detail/type_float.hpp",
    "src/glm/detail/type_gentype.hpp",
    "src/glm/detail/type_gentype.inl",
    "src/glm/detail/type_half.hpp",
    "src/glm/detail/type_half.inl",
    "src/glm/detail/type_int.hpp",
    "src/glm/detail/type_mat.hpp",
    "src/glm/detail/type_mat.inl",
    "src/glm/detail/type_mat2x2.hpp",
    "src/glm/detail/type_mat2x2.inl",
    "src/glm/detail/type_mat2x3.hpp",
    "src/glm/detail/type_mat2x3.inl",
    "src/glm/detail/type_mat2x4.hpp",
    "src/glm/detail/type_mat2x4.inl",
    "src/glm/detail/type_mat3x2.hpp",
    "src/glm/detail/type_mat3x2.inl",
    "src/glm/detail/type_mat3x3.hpp",
    "src/glm/detail/type_mat3x3.inl",
    "src/glm/detail/type_mat3x4.hpp",
    "src/glm/detail/type_mat3x4.inl",
    "src/glm/detail/type_mat4x2.hpp",
    "src/glm/detail/type_mat4x2.inl",
    "src/glm/detail/type_mat4x3.hpp",
    "src/glm/detail/type_mat4x3.inl",
    "src/glm/detail/type_mat4x4.hpp",
    "src/glm/detail/type_mat4x4.inl",
    "src/glm/detail/type_vec.hpp",
    "src/glm/detail/type_vec.inl",
    "src/glm/detail/type_vec1.hpp",
    "src/glm/detail/type_vec1.inl",
    "src/glm/detail/type_vec2.hpp",
    "src/glm/detail/type_vec2.inl",
    "src/glm/detail/type_vec3.hpp",
    "src/glm/detail/type_vec3.inl",
    "src/glm/detail/type_vec4.hpp",
    "src/glm/detail/type_vec4.inl",
    "src/glm/detail/_features.hpp",
    "src/glm/detail/_fixes.hpp",
    "src/glm/detail/_literals.hpp",
    "src/glm/detail/_noise.hpp",
    "src/glm/detail/_swizzle.hpp",
    "src/glm/detail/_swizzle_func.hpp",
    "src/glm/detail/_vectorize.hpp",
    "src/glm/exponential.hpp",
    "src/glm/ext.hpp",
    "src/glm/fwd.hpp",
    "src/glm/geometric.hpp",
    "src/glm/glm.hpp",
    "src/glm/gtc",
    "src/glm/gtc/constants.hpp",
    "src/glm/gtc/constants.inl",
    "src/glm/gtc/epsilon.hpp",
    "src/glm/gtc/epsilon.inl",
    "src/glm/gtc/matrix_access.hpp",
    "src/glm/gtc/matrix_access.inl",
    "src/glm/gtc/matrix_integer.hpp",
    "src/glm/gtc/matrix_inverse.hpp",
    "src/glm/gtc/matrix_inverse.inl",
    "src/glm/gtc/matrix_transform.hpp",
    "src/glm/gtc/matrix_transform.inl",
    "src/glm/gtc/noise.hpp",
    "src/glm/gtc/noise.inl",
    "src/glm/gtc/packing.hpp",
    "src/glm/gtc/packing.inl",
    "src/glm/gtc/quaternion.hpp",
    "src/glm/gtc/quaternion.inl",
    "src/glm/gtc/random.hpp",
    "src/glm/gtc/random.inl",
    "src/glm/gtc/reciprocal.hpp",
    "src/glm/gtc/reciprocal.inl",
    "src/glm/gtc/type_precision.hpp",
    "src/glm/gtc/type_precision.inl",
    "src/glm/gtc/type_ptr.hpp",
    "src/glm/gtc/type_ptr.inl",
    "src/glm/gtc/ulp.hpp",
    "src/glm/gtc/ulp.inl",
    "src/glm/gtx",
    "src/glm/gtx/associated_min_max.hpp",
    "src/glm/gtx/associated_min_max.inl",
    "src/glm/gtx/bit.hpp",
    "src/glm/gtx/bit.inl",
    "src/glm/gtx/closest_point.hpp",
    "src/glm/gtx/closest_point.inl",
    "src/glm/gtx/color_space.hpp",
    "src/glm/gtx/color_space.inl",
    "src/glm/gtx/color_space_YCoCg.hpp",
    "src/glm/gtx/color_space_YCoCg.inl",
    "src/glm/gtx/compatibility.hpp",
    "src/glm/gtx/compatibility.inl",
    "src/glm/gtx/component_wise.hpp",
    "src/glm/gtx/component_wise.inl",
    "src/glm/gtx/constants.hpp",
    "src/glm/gtx/dual_quaternion.hpp",
    "src/glm/gtx/dual_quaternion.inl",
    "src/glm/gtx/epsilon.hpp",
    "src/glm/gtx/euler_angles.hpp",
    "src/glm/gtx/euler_angles.inl",
    "src/glm/gtx/extend.hpp",
    "src/glm/gtx/extend.inl",
    "src/glm/gtx/extented_min_max.hpp",
    "src/glm/gtx/extented_min_max.inl",
    "src/glm/gtx/fast_exponential.hpp",
    "src/glm/gtx/fast_exponential.inl",
    "src/glm/gtx/fast_square_root.hpp",
    "src/glm/gtx/fast_square_root.inl",
    "src/glm/gtx/fast_trigonometry.hpp",
    "src/glm/gtx/fast_trigonometry.inl",
    "src/glm/gtx/gradient_paint.hpp",
    "src/glm/gtx/gradient_paint.inl",
    "src/glm/gtx/handed_coordinate_space.hpp",
    "src/glm/gtx/handed_coordinate_space.inl",
    "src/glm/gtx/inertia.hpp",
    "src/glm/gtx/inertia.inl",
    "src/glm/gtx/integer.hpp",
    "src/glm/gtx/integer.inl",
    "src/glm/gtx/intersect.hpp",
    "src/glm/gtx/intersect.inl",
    "src/glm/gtx/int_10_10_10_2.hpp",
    "src/glm/gtx/int_10_10_10_2.inl",
    "src/glm/gtx/io.hpp",
    "src/glm/gtx/io.inl",
    "src/glm/gtx/log_base.hpp",
    "src/glm/gtx/log_base.inl",
    "src/glm/gtx/matrix_cross_product.hpp",
    "src/glm/gtx/matrix_cross_product.inl",
    "src/glm/gtx/matrix_interpolation.hpp",
    "src/glm/gtx/matrix_interpolation.inl",
    "src/glm/gtx/matrix_major_storage.hpp",
    "src/glm/gtx/matrix_major_storage.inl",
    "src/glm/gtx/matrix_operation.hpp",
    "src/glm/gtx/matrix_operation.inl",
    "src/glm/gtx/matrix_query.hpp",
    "src/glm/gtx/matrix_query.inl",
    "src/glm/gtx/mixed_product.hpp",
    "src/glm/gtx/mixed_product.inl",
    "src/glm/gtx/multiple.hpp",
    "src/glm/gtx/multiple.inl",
    "src/glm/gtx/noise.hpp",
    "src/glm/gtx/norm.hpp",
    "src/glm/gtx/norm.inl",
    "src/glm/gtx/normal.hpp",
    "src/glm/gtx/normal.inl",
    "src/glm/gtx/normalize_dot.hpp",
    "src/glm/gtx/normalize_dot.inl",
    "src/glm/gtx/number_precision.hpp",
    "src/glm/gtx/number_precision.inl",
    "src/glm/gtx/optimum_pow.hpp",
    "src/glm/gtx/optimum_pow.inl",
    "src/glm/gtx/orthonormalize.hpp",
    "src/glm/gtx/orthonormalize.inl",
    "src/glm/gtx/perpendicular.hpp",
    "src/glm/gtx/perpendicular.inl",
    "src/glm/gtx/polar_coordinates.hpp",
    "src/glm/gtx/polar_coordinates.inl",
    "src/glm/gtx/projection.hpp",
    "src/glm/gtx/projection.inl",
    "src/glm/gtx/quaternion.hpp",
    "src/glm/gtx/quaternion.inl",
    "src/glm/gtx/random.hpp",
    "src/glm/gtx/raw_data.hpp",
    "src/glm/gtx/raw_data.inl",
    "src/glm/gtx/reciprocal.hpp",
    "src/glm/gtx/rotate_normalized_axis.hpp",
    "src/glm/gtx/rotate_normalized_axis.inl",
    "src/glm/gtx/rotate_vector.hpp",
    "src/glm/gtx/rotate_vector.inl",
    "src/glm/gtx/scalar_relational.hpp",
    "src/glm/gtx/scalar_relational.inl",
    "src/glm/gtx/simd_mat4.hpp",
    "src/glm/gtx/simd_mat4.inl",
    "src/glm/gtx/simd_quat.hpp",
    "src/glm/gtx/simd_quat.inl",
    "src/glm/gtx/simd_vec4.hpp",
    "src/glm/gtx/simd_vec4.inl",
    "src/glm/gtx/spline.hpp",
    "src/glm/gtx/spline.inl",
    "src/glm/gtx/std_based_type.hpp",
    "src/glm/gtx/std_based_type.inl",
    "src/glm/gtx/string_cast.hpp",
    "src/glm/gtx/string_cast.inl",
    "src/glm/gtx/transform.hpp",
    "src/glm/gtx/transform.inl",
    "src/glm/gtx/transform2.hpp",
    "src/glm/gtx/transform2.inl",
    "src/glm/gtx/ulp.hpp",
    "src/glm/gtx/unsigned_int.hpp",
    "src/glm/gtx/unsigned_int.inl",
    "src/glm/gtx/vec1.hpp",
    "src/glm/gtx/vec1.inl",
    "src/glm/gtx/vector_angle.hpp",
    "src/glm/gtx/vector_angle.inl",
    "src/glm/gtx/vector_query.hpp",
    "src/glm/gtx/vector_query.inl",
    "src/glm/gtx/wrap.hpp",
    "src/glm/gtx/wrap.inl",
    "src/glm/integer.hpp",
    "src/glm/mat2x2.hpp",
    "src/glm/mat2x3.hpp",
    "src/glm/mat2x4.hpp",
    "src/glm/mat3x2.hpp",
    "src/glm/mat3x3.hpp",
    "src/glm/mat3x4.hpp",
    "src/glm/mat4x2.hpp",
    "src/glm/mat4x3.hpp",
    "src/glm/mat4x4.hpp",
    "src/glm/matrix.hpp",
    "src/glm/packing.hpp",
    "src/glm/trigonometric.hpp",
    "src/glm/vec2.hpp",
    "src/glm/vec3.hpp",
    "src/glm/vec4.hpp",
    "src/glm/vector_relational.hpp",
    "src/glm/virtrev/xstream.hpp",
  ]

  public_configs = [
    "//azer/third_party/gli:gli-config",
    ":glm-config",
  ]
}

test("glm_mat2x2_test") {
  sources = ["src/test/core/core_type_mat2x2.cpp"] deps = [":glm"]
}

test("glm_mat3x3_test") {
  sources = ["src/test/core/core_type_mat3x3.cpp"] deps = [":glm"]
}

test("glm_mat4x4_test") {
  sources = ["src/test/core/core_type_mat4x4.cpp"] deps = [":glm"]
}

test("glm_vec1_test") {
  sources = ["src/test/core/core_type_vec1.cpp"] deps = [":glm"]
}

test("glm_vec2_test") {
  sources = ["src/test/core/core_type_vec2.cpp"] deps = [":glm"]
}

test("glm_vec3_test") {
  sources = ["src/test/core/core_type_vec3.cpp"] deps = [":glm"]
}

test("glm_vec4_test") {
  sources = ["src/test/core/core_type_vec4.cpp"] deps = [":glm"]
}

